apply plugin: 'java'
apply plugin: 'maven'
group = 'com.varshad'
version = '1.0-SNAPSHOT'

description = """friend-management"""
sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

buildscript {
    ext {
        joobyVersion = "1.3.0"
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jooby:jooby-gradle-plugin:$joobyVersion"
    }
}

apply plugin: 'application'
apply plugin: 'jooby'

mainClassName = "com.varshad.App"

repositories {
    mavenCentral()
}
dependencies {
    compile group: 'org.jooby', name: 'jooby', version: '1.3.0'
    compile group: 'org.jooby', name: 'jooby-netty', version: '1.3.0'
    compile group:'io.netty', name: 'netty-transport-native-epoll', version: '4.1.12.Final', classifier: 'linux-x86_64'
    compile group: 'org.jooby', name: 'jooby-jackson',version: '1.3.0'
    compile group: 'org.jooby', name: 'jooby-neo4j',version: '1.3.0'
    compile group: 'org.jooby', name: 'jooby-apitool',version: '1.3.0'
    compile group: 'org.jooby', name: 'jooby-jdbc',version: '1.3.0'
    compile group: 'org.jooby', name: 'jooby-jdbi',version: '1.3.0'
    compile group: 'org.jdbi', name: 'jdbi3-core', version: '3.2.0'
    compile 'org.webjars:swagger-ui:3.0.19'
    compile group: 'org.mindrot', name: 'jbcrypt', version:'0.4'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.8.4'
    compile group: 'com.squareup.retrofit2', name: 'retrofit', version:'2.2.0'
    compile group: 'com.squareup.retrofit2', name: 'converter-jackson', version:'2.2.0'
    //compile group: 'org.jooby', name: 'jooby-jdbi3',version: '1.3.0'
    compile group: 'commons-collections', name: 'commons-collections', version: '2.0'
    compile group:'io.netty', name: 'netty-transport-native-epoll', version: '4.1.12.Final', classifier: 'linux-x86_64'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    compile 'org.neo4j.driver:neo4j-java-driver:1.4.4'
    compile group: 'org.neo4j', name: 'neo4j-jdbc-driver', version: '3.3.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.0.1'
    compileOnly group: 'org.projectlombok', name: 'lombok', version:'1.16.14'
    compile group: 'com.github.mfornos', name: 'humanize-slim', version:'1.2.2'
    compile group: 'com.github.mfornos', name: 'humanize-icu', version:'1.2.2'
    compile group: 'com.github.mfornos', name: 'humanize-emoji', version:'1.2.2'
}

sourceSets.main.resources {
    srcDirs = ["conf", "public", "src/main/resources", "build/swagger"]
}



import com.fasterxml.jackson.databind.ObjectMapper
import com.fasterxml.jackson.databind.SerializationFeature
import com.fasterxml.jackson.dataformat.yaml.YAMLFactory

task convertSwaggerYAML2JSON(type: ConvertSwaggerYAML2JSONTask)
processResources.dependsOn convertSwaggerYAML2JSON

@SuppressWarnings("GrMethodMayBeStatic")
class ConvertSwaggerYAML2JSONTask extends DefaultTask {

    @InputFile
    File sourceYAML = new File('src/main/resources/swagger/swagger.yaml')

    @OutputFile
    File destinationJSON = new File('build/swagger/swagger.json')

    @TaskAction
    def convert() {
        def yamlReader = new ObjectMapper(new YAMLFactory())
        Object obj = yamlReader.readValue(sourceYAML, Object.class)
        ObjectMapper jsonWriter = new ObjectMapper()
        jsonWriter.enable(SerializationFeature.INDENT_OUTPUT)
        jsonWriter.writeValue(destinationJSON, obj)
    }
}